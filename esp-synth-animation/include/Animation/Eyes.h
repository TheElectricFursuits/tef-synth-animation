/*
 * Eyes.h
 *
 *  Created on: 17 May 2020
 *      Author: xasin
 */

#ifndef STM32F4_ANIMATION_EYES_H_
#define STM32F4_ANIMATION_EYES_H_

#include <Animation/AnimationElement.h>
#include <tef/led/GenericMatrix.h>

namespace TEF {
namespace Animation {

typedef std::array<float, 22> eye_shape;

/*
 * Eye-Shape according to http://sofoxcentral.com/projects/draw2cpp.html
 *
 * 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xf0, 0x0, 0x0, 0x7, 0xf8,
0x0, 0x0, 0xf, 0xfc, 0x0, 0x0, 0xf, 0xfc, 0x0, 0x0, 0x1f, 0xfc, 0x0, 0x0, 0x1f, 0xfc,
0x0, 0x0, 0x1f, 0xf8, 0x0, 0x0, 0xf, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
 */

const eye_shape relaxed_eye = {
		3.7, 6.3,
		2.4, 6.99,
		1.01, 6.99,
		1.01, 6.99,
		0.01, 6.99, 0, 6.99, 0, 6.99, 0, 6.99,
		0, 6.3,
		1.01, 5.5,
		2.01, 4.8
};

/*
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0xf0, 0x0, 0x0, 0x25, 0xf8, 0x0, 0x0, 0xd, 0xfc,
0x0, 0x0, 0xd, 0xfc, 0x0, 0x0, 0x5d, 0xfc, 0x0, 0x0, 0x1d, 0xfc, 0x0, 0x0, 0x5d, 0xfc,
0x0, 0x0, 0x1d, 0xf8, 0x0, 0x0, 0xf, 0xf0, 0x0, 0x0, 0x3, 0xc0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
*/

const eye_shape surprised_eye = {
		3, 6,
		1, 7,
		0, 7,
		-1, 8,
		-1, 8,
		-1, 8,
		-1, 8,
		-1, 7,
		-1, 7,
		0, 6,
		1, 5
};

/*
 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38,
0x0, 0x0, 0x0, 0xfc, 0x0, 0x0, 0x3, 0xfc, 0x0, 0x0, 0xf, 0xfc, 0x0, 0x0, 0x1f, 0xfc,
0x0, 0x0, 0x1f, 0xf8, 0x0, 0x0, 0xf, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
 */
const eye_shape angry_eye = {
		5, 6,
		4, 7,
		4, 7,
		3, 7,
		3, 7,
		2, 7,
		2, 7,
		1, 7,
		1, 7,
		1, 6,
		2, 5
};

/*
 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xf0, 0x0, 0x0, 0x7, 0xf8,
0x0, 0x0, 0xf, 0xfc, 0x0, 0x0, 0xf, 0xfc, 0x0, 0x0, 0x1f, 0xfc, 0x0, 0x0, 0x1f, 0x1c,
0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
 */

const eye_shape happy_eye = {
		4, 6,
		2, 6,
		1, 6,
		1, 5,
		0, 5,
		0, 4,
		0, 4,
		0, 4,
		0, 5,
		1, 5,
		2, 5
};

/*
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xf0,
0x0, 0x0, 0xf, 0xfc, 0x0, 0x0, 0xf, 0xfc, 0x0, 0x0, 0x1f, 0xfc, 0x0, 0x0, 0x1f, 0xfc,
0x0, 0x0, 0x1c, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x92, 0x0, 0x0, 0x49, 0x24,
0x0, 0x0, 0x92, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
 */
const eye_shape shy_eye = {
		4, 6,
		2, 6,
		1, 6,
		1, 6, 1, 6, 1, 6, 1, 6,
		2, 6,
		2, 6,
		3, 6,
		4, 5
};

const eye_shape heart_eye = {
		6, 4,
		1, 4,
		0, 5,
		0, 6,
		0, 7,
		1, 7,
		0, 7,
		0, 6,
		0, 5,
		1, 4,
		6, 4
};

struct eye_shape_def {
	const eye_shape *shape;
	float expressiveness;
};

class Eyes: public AnimationElement {
private:
	void draw_total_eye(const eye_shape &eye);

	void calculate_blink(eye_shape &eye);

	void draw_blush();

public:
	LED::GenericMatrix &matrix;

	std::array<eye_shape_def, 5> emotions;

	const int offset;

	LED::Colour outer_color;
	LED::Colour inner_color;
	LED::Colour blush_colour;

	float iris_x;

	Eyes(AnimationServer &server, animation_id_t ID, LED::GenericMatrix &target_matrix);

	float *get_flt(animation_value_id_t val);
	LED::Colour *get_color(uint8_t val);

	void tick(float delta_t);
};

}
} /* namespace Xasin */

#endif /* STM32F4_ANIMATION_EYES_H_ */
